trigger:
- main

variables:
  azureSubscription: 'My-Azure-Service-Connection'
  azureContainerRegistry: 'myregistry.azurecr.io'
  imageName: 'myapp'
  kubernetesNamespace: 'default'
  kubernetesCluster: 'myAKSCluster'
  helmChartPath: 'helm/myapp'

stages:
- stage: Build
  jobs:
  - job: BuildAndPush
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      inputs:
        containerRegistry: $(azureSubscription)
        repository: $(imageName)
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)

- stage: Deploy
  dependsOn: Build
  jobs:
  - deployment: DeployToAKS
    environment: 'aks-dev'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmInstaller@1
            inputs:
              helmVersionToInstall: 'latest'

          - task: Kubernetes@1
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: $(azureSubscription)
              azureResourceGroup: 'myResourceGroup'
              kubernetesCluster: $(kubernetesCluster)
              namespace: $(kubernetesNamespace)
              command: 'apply'
              useConfigurationFile: false

          - task: HelmDeploy@0
            inputs:
              connectionType: 'Azure Resource Manager'
              azureSubscription: $(azureSubscription)
              azureResourceGroup: 'myResourceGroup'
              kubernetesCluster: $(kubernetesCluster)
              namespace: $(kubernetesNamespace)
              command: 'upgrade'
              chartType: 'FilePath'
              chartPath: '$(helmChartPath)'
              releaseName: 'myapp-release'
              overrideValues: |
                image.repository=$(azureContainerRegistry)/$(imageName)
                image.tag=$(Build.BuildId)
